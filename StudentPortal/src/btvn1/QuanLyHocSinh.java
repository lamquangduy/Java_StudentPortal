/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package btvn1;

import java.io.File;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.util.Comparator;


public class QuanLyHocSinh extends javax.swing.JFrame {
    
    private ArrayList<Student> list;
    DefaultTableModel model;
    /**
     * Creates new form QuanLyHocSinh
     */
       
    
    public QuanLyHocSinh() {
        initComponents();
        list = new ArrayList<>();
        model = (DefaultTableModel) Table_QLHS.getModel();         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BT_Clear = new javax.swing.JButton();
        BT_Add = new javax.swing.JButton();
        BT_Remove = new javax.swing.JButton();
        BT_Save = new javax.swing.JButton();
        BT_Import = new javax.swing.JButton();
        BT_Export = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_QLHS = new javax.swing.JTable();
        Label_TenHS = new javax.swing.JLabel();
        Label_MHS = new javax.swing.JLabel();
        Label_Diem = new javax.swing.JLabel();
        Label_HinhAnh = new javax.swing.JLabel();
        Label_DiaChi = new javax.swing.JLabel();
        Label_GhiChu = new javax.swing.JLabel();
        TF_MHS = new javax.swing.JTextField();
        TF_TenHS = new javax.swing.JTextField();
        TF_Diem = new javax.swing.JTextField();
        TF_HinhAnh = new javax.swing.JTextField();
        TF_DiaChi = new javax.swing.JTextField();
        TF_GhiChu = new javax.swing.JTextField();
        CBB_Sort = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuanLyHocSinh");

        BT_Clear.setText("Clear Input");
        BT_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ClearActionPerformed(evt);
            }
        });

        BT_Add.setText("Add Student");
        BT_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_AddActionPerformed(evt);
            }
        });

        BT_Remove.setText("Remove Student");
        BT_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_RemoveActionPerformed(evt);
            }
        });

        BT_Save.setText("Save Change");
        BT_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_SaveActionPerformed(evt);
            }
        });

        BT_Import.setText("Import CSV");
        BT_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ImportActionPerformed(evt);
            }
        });

        BT_Export.setText("Export CSV");
        BT_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_ExportActionPerformed(evt);
            }
        });

        Table_QLHS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MHS", "TenHS", "Diem", "HinhAnh", "DiaChi", "GhiChu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table_QLHS.setShowGrid(true);
        jScrollPane1.setViewportView(Table_QLHS);
        if (Table_QLHS.getColumnModel().getColumnCount() > 0) {
            Table_QLHS.getColumnModel().getColumn(0).setResizable(false);
            Table_QLHS.getColumnModel().getColumn(1).setResizable(false);
            Table_QLHS.getColumnModel().getColumn(2).setResizable(false);
            Table_QLHS.getColumnModel().getColumn(3).setResizable(false);
            Table_QLHS.getColumnModel().getColumn(4).setResizable(false);
            Table_QLHS.getColumnModel().getColumn(5).setResizable(false);
        }

        Label_TenHS.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_TenHS.setText("Ten hoc sinh:");

        Label_MHS.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_MHS.setText("Ma hoc sinh:");

        Label_Diem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_Diem.setText("Diem:");

        Label_HinhAnh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_HinhAnh.setText("Hinh anh:");

        Label_DiaChi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_DiaChi.setText("Dia chi:");

        Label_GhiChu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Label_GhiChu.setText("Ghi chu:");

        CBB_Sort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Sort Table --", "MHS tang dan", "MHS giam dan", "Diem tang dan", "Diem giam dan" }));
        CBB_Sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBB_SortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Label_MHS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_MHS, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_GhiChu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_GhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_DiaChi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_HinhAnh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_HinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_Diem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_Diem, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_TenHS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TF_TenHS, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(BT_Clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BT_Add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BT_Remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BT_Save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BT_Import)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BT_Export)
                        .addGap(14, 14, 14))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CBB_Sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TF_MHS, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_MHS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Label_TenHS)
                    .addComponent(TF_TenHS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Label_Diem)
                    .addComponent(TF_Diem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_HinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_HinhAnh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_DiaChi)
                    .addComponent(TF_DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_GhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_GhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(CBB_Sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BT_Clear)
                    .addComponent(BT_Add)
                    .addComponent(BT_Remove)
                    .addComponent(BT_Save)
                    .addComponent(BT_Import)
                    .addComponent(BT_Export))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_ClearActionPerformed
        
        int check = JOptionPane.showConfirmDialog(rootPane, "Clear Input?");
        if(check == JOptionPane.YES_OPTION){
            TF_MHS.setText("");
            TF_TenHS.setText("");
            TF_Diem.setText("");
            TF_HinhAnh.setText("");
            TF_DiaChi.setText("");
            TF_GhiChu.setText("");
        }      
    }//GEN-LAST:event_BT_ClearActionPerformed

    private void BT_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_AddActionPerformed
        int check = JOptionPane.showConfirmDialog(rootPane, "Add student?");
        if(check == JOptionPane.YES_OPTION){
            //This code use for add student to table
            Student s = new Student();        
            s.setMHS(TF_MHS.getText());
            s.setTenHS(TF_TenHS.getText());
            s.setDiem(Double.parseDouble(TF_Diem.getText()));
            s.setDiaChi(TF_DiaChi.getText());
            s.setHinhAnh(TF_HinhAnh.getText());
            s.setGhiChu(TF_GhiChu.getText());   
            list.add(s);
            showResult();
            
            //This code use for clear Input
            TF_MHS.setText("");
            TF_TenHS.setText("");
            TF_Diem.setText("");
            TF_HinhAnh.setText("");
            TF_DiaChi.setText("");
            TF_GhiChu.setText("");
        }   
        
    }//GEN-LAST:event_BT_AddActionPerformed

    private void BT_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_RemoveActionPerformed
        // Get the selected row from the table
        int selectedRow = Table_QLHS.getSelectedRow();
    
        // Get the student from the selected row
        String mhs = (String) Table_QLHS.getValueAt(selectedRow, 0);
        Student selectedStudent = null;
        for (Student s : list) {
            if (s.getMHS().equals(mhs)) {
                selectedStudent = s;
                break;
            }
        }
        
        // Remove the student from the list
        list.remove(selectedStudent);           // Remove the row from the table's model
        DefaultTableModel dtable = (DefaultTableModel) Table_QLHS.getModel();
        dtable.removeRow(selectedRow);
        
        // Refresh the table's view
        Table_QLHS.revalidate();
        Table_QLHS.repaint();      
    }//GEN-LAST:event_BT_RemoveActionPerformed
    
    private void BT_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_SaveActionPerformed
        if (Table_QLHS.isEditing()){
            Table_QLHS.getCellEditor().stopCellEditing();  
        }   
        for (int i = 0; i < Table_QLHS.getRowCount(); i++) {
            String mhs = (String) Table_QLHS.getValueAt(i, 0);
            String tenHS = (String) Table_QLHS.getValueAt(i, 1);
            Double diem = (Double) Table_QLHS.getValueAt(i, 2);
            String diaChi = (String) Table_QLHS.getValueAt(i, 3);
            String hinhAnh = (String) Table_QLHS.getValueAt(i, 4);
            String ghiChu = (String) Table_QLHS.getValueAt(i, 5);
            Student s = list.get(i);
            s.setMHS(mhs);
            s.setTenHS(tenHS);
            s.setDiem(diem);
            s.setDiaChi(diaChi);
            s.setHinhAnh(hinhAnh);
            s.setGhiChu(ghiChu);
        }
    }//GEN-LAST:event_BT_SaveActionPerformed

    private void BT_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_ImportActionPerformed
        //This code use for import file by choise 
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            List<String[]> data = null;
            try {
                data = CSV.read(file.getPath());
            } catch (IOException ex) {
                Logger.getLogger(QuanLyHocSinh.class.getName()).log(Level.SEVERE, null, ex);
            }           
            // clear the previous data in the list
            list.clear();      
            //This code use for add data in csv file to table
            for (int i = 1; i < data.size(); i++) {
                Student s = new Student();
                String[] row = data.get(i);
                for (int j = 0; j < row.length; j++) {
                    switch(j) {
                        case 0 -> s.setMHS(row[j]);
                        case 1 -> s.setTenHS(row[j]);
                        case 2 -> s.setDiem(Double.parseDouble(row[j]));
                        case 3 -> s.setDiaChi(row[j]);
                        case 4 -> s.setHinhAnh(row[j]);
                        case 5 -> s.setGhiChu(row[j]);                                         
                    }
                }
                list.add(s);
                showResult();
            }
            JOptionPane.showMessageDialog(null, "Data imported successfully");
        }
    }//GEN-LAST:event_BT_ImportActionPerformed

    private void BT_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_ExportActionPerformed
        //This code use for export file by choise
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Save CSV File");   
            
            int userSelection = fileChooser.showSaveDialog(this);
            
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                if (!fileToSave.getAbsolutePath().endsWith(".csv")) {
                    fileToSave = new File(fileToSave.getAbsolutePath() + ".csv");
                }
                
                try (FileWriter writer = new FileWriter(fileToSave)) {
                    // Write the header row
                    writer.append("MHS, TenHS, Diem, DiaChi, HinhAnh, GhiChu\n"); 
                    for (Student s : list) {
                        System.out.println(s.getMHS() + "," + s.getTenHS() + "," + s.getDiem() + "," + s.getDiaChi() + "," + s.getHinhAnh() + "," + s.getGhiChu());
                    }
                    
                    // Write each row
                    for (Student s : list) {
                        writer.append(s.getMHS() + "," + s.getTenHS() + "," + s.getDiem() + "," + s.getDiaChi() + "," + s.getHinhAnh() + "," + s.getGhiChu() + "\n"); 
                    }
                }
                JOptionPane.showMessageDialog(null, "Data exported successfully");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error exporting data");
        }
    }//GEN-LAST:event_BT_ExportActionPerformed

    private void CBB_SortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBB_SortActionPerformed
        // This code can print index but can't sort the table
        int index = CBB_Sort.getSelectedIndex();
        if(index>0){
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(Table_QLHS.getModel());                       
            //Test code
            System.out.println(index);
            String test = CBB_Sort.getItemAt(index);
            System.out.println(test);
            
            switch(index){
                // naturalOrder() is increase sort
                // reverseOrder() is decrease sort
                // 0 is the index of the "MHS" column
                // 2 is the index of the "Diem" column
                case 1 -> sorter.setComparator(0, Comparator.naturalOrder());
                case 2 -> sorter.setComparator(0, Comparator.reverseOrder());
                case 3 -> sorter.setComparator(2, Comparator.naturalOrder());
                case 4 -> sorter.setComparator(2, Comparator.reverseOrder());
            }            
            Table_QLHS.setRowSorter(sorter); 
            sorter.sort();
        }
    }//GEN-LAST:event_CBB_SortActionPerformed
        
    public void showResult(){
        Student s = list.get(list.size() - 1);
        model.addRow(new Object[]{
            s.getMHS(), s.getTenHS(), s.getDiem(), s.getDiaChi(), s.getHinhAnh(), s.getGhiChu()
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyHocSinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyHocSinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyHocSinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyHocSinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyHocSinh().setVisible(true);
            }
        });        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Add;
    private javax.swing.JButton BT_Clear;
    private javax.swing.JButton BT_Export;
    private javax.swing.JButton BT_Import;
    private javax.swing.JButton BT_Remove;
    private javax.swing.JButton BT_Save;
    private javax.swing.JComboBox<String> CBB_Sort;
    private javax.swing.JLabel Label_DiaChi;
    private javax.swing.JLabel Label_Diem;
    private javax.swing.JLabel Label_GhiChu;
    private javax.swing.JLabel Label_HinhAnh;
    private javax.swing.JLabel Label_MHS;
    private javax.swing.JLabel Label_TenHS;
    private javax.swing.JTextField TF_DiaChi;
    private javax.swing.JTextField TF_Diem;
    private javax.swing.JTextField TF_GhiChu;
    private javax.swing.JTextField TF_HinhAnh;
    private javax.swing.JTextField TF_MHS;
    private javax.swing.JTextField TF_TenHS;
    private javax.swing.JTable Table_QLHS;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
